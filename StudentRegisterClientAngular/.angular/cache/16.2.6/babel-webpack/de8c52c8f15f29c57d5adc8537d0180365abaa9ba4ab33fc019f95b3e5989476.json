{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../student-data-item/student-data-item.component\";\nfunction StudentDataContainerComponent_app_student_data_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-student-data-item\", 5);\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"data\", data_r1);\n  }\n}\nexport class StudentDataContainerComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.studentDataList = [];\n    this.errorMsg = '';\n  }\n  ngOnInit() {\n    this.dataService.getStudentData().subscribe(data => {\n      this.studentDataList = data.reverse();\n      this.errorMsg = '';\n    }, error => {\n      this.errorMsg = 'Error related to server';\n    });\n  }\n  addStudentData() {\n    const newStudentData = {\n      index: parseInt(this.index),\n      name: this.name\n    };\n    this.dataService.postStudentData(newStudentData).subscribe(response => {\n      if (response.status === 200 && response.body === 'Student Saved Successfully') {\n        // Handle a successful response with a status code of 200 and the expected message\n        this.studentDataList.push(newStudentData);\n        this.index = '';\n        this.name = '';\n      } else {\n        // Handle other status codes or unexpected response messages if needed\n        this.errorMsg = 'Error posting student data to the server';\n      }\n    }, error => {\n      // Handle HTTP request errors\n      this.errorMsg = 'Error posting student data to the server';\n      console.log('HTTP request error');\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function StudentDataContainerComponent_Factory(t) {\n    return new (t || StudentDataContainerComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StudentDataContainerComponent,\n    selectors: [[\"app-student-data-container\"]],\n    outputs: {\n      studentDataList: \"studentDataList\"\n    },\n    decls: 7,\n    vars: 4,\n    consts: [[3, \"submit\"], [\"type\", \"text\", \"name\", \"index\", \"id\", \"index\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"ADD DATA\"], [3, \"data\", 4, \"ngFor\", \"ngForOf\"], [3, \"data\"]],\n    template: function StudentDataContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function StudentDataContainerComponent_Template_form_submit_0_listener() {\n          return ctx.addStudentData();\n        });\n        i0.ɵɵelementStart(1, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function StudentDataContainerComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.index = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function StudentDataContainerComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, StudentDataContainerComponent_app_student_data_item_6_Template, 1, 1, \"app-student-data-item\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.index);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.errorMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.studentDataList);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.StudentDataItemComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","data_r1","StudentDataContainerComponent","constructor","dataService","studentDataList","errorMsg","ngOnInit","getStudentData","subscribe","data","reverse","error","addStudentData","newStudentData","index","parseInt","name","postStudentData","response","status","body","push","console","log","_","ɵɵdirectiveInject","i1","DataService","_2","selectors","outputs","decls","vars","consts","template","StudentDataContainerComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","StudentDataContainerComponent_Template_form_submit_0_listener","StudentDataContainerComponent_Template_input_ngModelChange_1_listener","$event","ɵɵelementEnd","StudentDataContainerComponent_Template_input_ngModelChange_2_listener","ɵɵtext","ɵɵtemplate","StudentDataContainerComponent_app_student_data_item_6_Template","ɵɵadvance","ɵɵtextInterpolate"],"sources":["E:\\Coding\\Projects\\StudentRegister\\StudentRegisterClient\\src\\app\\components\\student-data-container\\student-data-container.component.ts","E:\\Coding\\Projects\\StudentRegister\\StudentRegisterClient\\src\\app\\components\\student-data-container\\student-data-container.component.html"],"sourcesContent":["import { Component, OnInit, Output } from '@angular/core';\nimport { STUDENTDATA } from 'src/app/Model/STUDENTDATA';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-student-data-container',\n  templateUrl: './student-data-container.component.html',\n  styleUrls: ['./student-data-container.component.css'],\n})\nexport class StudentDataContainerComponent implements OnInit {\n  @Output()\n  studentDataList: STUDENTDATA[] = [];\n  index!: string;\n  name!: string;\n  errorMsg: string = '';\n  constructor(private dataService: DataService) {}\n\n  ngOnInit(): void {\n    this.dataService.getStudentData().subscribe(\n      (data) => {\n        this.studentDataList = data.reverse();\n        this.errorMsg = '';\n      },\n      (error) => {\n        this.errorMsg = 'Error related to server';\n      }\n    );\n  }\n\n  addStudentData() {\n    const newStudentData = {\n      index: parseInt(this.index),\n      name: this.name,\n    };\n\n    this.dataService.postStudentData(newStudentData).subscribe(\n      (response) => {\n        if (\n          response.status === 200 &&\n          response.body === 'Student Saved Successfully'\n        ) {\n          // Handle a successful response with a status code of 200 and the expected message\n          this.studentDataList.push(newStudentData);\n          this.index = '';\n          this.name = '';\n        } else {\n          // Handle other status codes or unexpected response messages if needed\n          this.errorMsg = 'Error posting student data to the server';\n        }\n      },\n      (error) => {\n        // Handle HTTP request errors\n        this.errorMsg = 'Error posting student data to the server';\n        console.log('HTTP request error');\n        console.log(error);\n      }\n    );\n  }\n}\n","<form (submit)=\"addStudentData()\">\n  <input type=\"text\" name=\"index\" id=\"index\" [(ngModel)]=\"index\" />\n  <input type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"name\" />\n  <input type=\"submit\" value=\"ADD DATA\" />\n</form>\n<p>{{ errorMsg }}</p>\n<app-student-data-item *ngFor=\"let data of studentDataList\" [data]=\"data\">\n</app-student-data-item>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}