{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getStudentData() {\n    return this.http.get('http://localhost:8080');\n  }\n  postStudentData(data) {\n    return this.http.post('http://localhost:8080/addBasicDetails', data, this.httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","DataService","constructor","http","httpOptions","headers","getStudentData","get","postStudentData","data","post","pipe","handleError","error","status","console","Error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\Coding\\Projects\\StudentRegister\\StudentRegisterClient\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { STUDENTDATA } from '../Model/STUDENTDATA';\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(private http: HttpClient) {}\n  getStudentData(): Observable<STUDENTDATA[]> {\n    return this.http.get<STUDENTDATA[]>('http://localhost:8080');\n  }\n\n  postStudentData(data: STUDENTDATA): Observable<STUDENTDATA> {\n    return this.http\n      .post<STUDENTDATA>(\n        'http://localhost:8080/addBasicDetails',\n        data,\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `,\n        error.error\n      );\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      () => new Error('Something bad happened; please try again later.')\n    );\n  }\n}\n"],"mappings":"AACA,SAGEA,WAAW,QACN,sBAAsB;AAC7B,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;AAKzD,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIP,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAEsC;EACvCQ,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAgB,uBAAuB,CAAC;EAC9D;EAEAC,eAAeA,CAACC,IAAiB;IAC/B,OAAO,IAAI,CAACN,IAAI,CACbO,IAAI,CACH,uCAAuC,EACvCD,IAAI,EACJ,IAAI,CAACL,WAAW,CACjB,CACAO,IAAI,CAACZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAC,CAAC;EACvC;EAEQA,WAAWA,CAACC,KAAwB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACtB;MACAC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAAC;KACjD,MAAM;MACL;MACA;MACAE,OAAO,CAACF,KAAK,CACX,yBAAyBA,KAAK,CAACC,MAAM,cAAc,EACnDD,KAAK,CAACA,KAAK,CACZ;;IAEH;IACA,OAAOb,UAAU,CACf,MAAM,IAAIgB,KAAK,CAAC,iDAAiD,CAAC,CACnE;EACH;EAAC,QAAAC,CAAA,G;qBAtCUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}